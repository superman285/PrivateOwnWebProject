<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>KoaETHNotes</title>
    <link rel="stylesheet" href="../public/css/index.css"/>
    <link rel="stylesheet" href="../public/css/buttons.css">
    <link rel="stylesheet" href="//at.alicdn.com/t/font_1041196_id02466l3ci.css"/>
    <link rel="icon" href="../public/images/ethpng.png">
</head>
<body>
<header id="header">
    <a class="add-note" title="添加笔记" href="#"><i class="iconfont icon-add"></i>&nbsp;Add Note</a>
    <ul class="user-area">
        <li><img class="avater" src="../public/images/ethpng.png" alt=""></li>
        <li><span class="usname" title="{{user.username}}">已登录</span></li>
        <li><span class="line l1"> | </span></li>
        <li><a class="logout" href="javascript:;">注销</a></li>
        <li class="guest">游客</li>
        <li><span class="line l2"> | </span></li>
        <li><a class="login" title="以太登录" href="javascript:;"><i class="iconfont icon-ethereum"></i>账户登录</a>
        </li>

        <div class="popModal">
            <h3>请输入账户地址</h3>
            <hr>
            <input type="text" class="addrInput">
            <hr>
            <button class="ensureModal button button-primary button-rounded">确定</button>
            <button class="unsureModal button button-rounded">取消</button>
        </div>

    </ul>
</header>


<div id="content">
</div>

<script src="./dist/bundle.js"></script>
<script>

    let avater = document.querySelector(".avater"),
        usname = document.querySelector(".usname"),
        line1 = document.getElementsByClassName("line")[0],
        line2 = document.getElementsByClassName("line")[1],
        guest = document.querySelector(".guest");

    let loginLink = document.querySelector(".login"),
        logoutLink = document.querySelector(".logout");

    function show(elems) {
        elems.forEach(elem=>{
            elem.style = "display:block;"
        })
    }
    function hide(elems) {
        elems.forEach(elem=>{
            elem.style = "display:none"
        })
    }

    function loginLoad() {
        if (localStorage.getItem('userAddr')) {
            show([avater, usname, line1, logoutLink]);
            hide([guest, line2, loginLink]);
        } else {
            hide([avater, usname, line1, logoutLink]);
            show([guest, line2, loginLink]);
        }
    }
    loginLoad();


    console.log('使用webpack的jq:',$);
    console.log('web3',Web3);

    let web3 = new Web3(new Web3.providers.HttpProvider("http://127.0.0.1:7545"));
    web3.eth.getAccounts(function (err, result) {
        console.log(`web3获取账户:${result}`);
    });
    console.log(web3);
    console.log('+++++++++++');

    let abi = [
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "notesContent",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "notesArr",
            "outputs": [
                {
                    "name": "uid",
                    "type": "uint256"
                },
                {
                    "name": "noteid",
                    "type": "uint256"
                },
                {
                    "name": "text",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "noteid",
                    "type": "uint256"
                },
                {
                    "name": "newtext",
                    "type": "string"
                }
            ],
            "name": "updateNote",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "founder",
            "outputs": [
                {
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "noteidTouid",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "noteIdx",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "getMyNotes",
            "outputs": [
                {
                    "components": [
                        {
                            "name": "uid",
                            "type": "uint256"
                        },
                        {
                            "name": "noteid",
                            "type": "uint256"
                        },
                        {
                            "name": "text",
                            "type": "string"
                        }
                    ],
                    "name": "",
                    "type": "tuple[]"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "notesMap",
            "outputs": [
                {
                    "name": "uid",
                    "type": "uint256"
                },
                {
                    "name": "noteid",
                    "type": "uint256"
                },
                {
                    "name": "text",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "text",
                    "type": "string"
                }
            ],
            "name": "addNote",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "noteid",
                    "type": "uint256"
                }
            ],
            "name": "getNote",
            "outputs": [
                {
                    "components": [
                        {
                            "name": "uid",
                            "type": "uint256"
                        },
                        {
                            "name": "noteid",
                            "type": "uint256"
                        },
                        {
                            "name": "text",
                            "type": "string"
                        }
                    ],
                    "name": "",
                    "type": "tuple"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "noteid",
                    "type": "uint256"
                }
            ],
            "name": "deleteNote",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "getAllNotes",
            "outputs": [
                {
                    "components": [
                        {
                            "name": "uid",
                            "type": "uint256"
                        },
                        {
                            "name": "noteid",
                            "type": "uint256"
                        },
                        {
                            "name": "text",
                            "type": "string"
                        }
                    ],
                    "name": "",
                    "type": "tuple[]"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "founderID",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "userNotes",
            "outputs": [
                {
                    "name": "uid",
                    "type": "uint256"
                },
                {
                    "name": "noteid",
                    "type": "uint256"
                },
                {
                    "name": "text",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "",
                    "type": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "noteidToindex",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        }
    ];
    let contractAddr = "0xfab5e6a306abc8b71ff98727a6f216fbd2ead4fc";
    let contractFounder = "0x2b9579b9eb65dbc6a10a3d27fc8aba8f615bb0be";
    let noteContractObj = new web3.eth.contract(abi,contractAddr);

    let popModal = document.querySelector(".popModal");

    loginLink.onclick = function () {
        popModal.classList.add('shown');
    }

    let addrInput = document.querySelector(".addrInput");
    let ensureBtn = document.querySelector(".ensureModal"),
        unsureBtn = document.querySelector(".unsureModal");

    let accountAddr = '0x0';

    unsureBtn.onclick = function () {
        popModal.classList.remove("shown");
    }
    ensureBtn.onclick = function () {
        accountAddr = addrInput.value;
        console.log(`获取的地址${accountAddr}`);
        console.log(web3.isAddress(accountAddr));

        if (web3.isAddress(accountAddr)) {
            Toast('登入成功!');
            popModal.classList.remove("shown");
            localStorage.setItem('userAddr',accountAddr);
            //loginLoad();
            location.reload();
        }else{
            Toast('请重新输入地址!')
        }
        addrInput.value = '';
    };

    logoutLink.onclick = ()=>{
        if (localStorage.getItem('userAddr')) {
            localStorage.removeItem('userAddr');
            //loginLoad();
            location.reload();
            Toast('登出成功!');
        }
    }


</script>


</body>
</html>